{
  "metadata": {
    "name": "@local/sample-prebuilt",
    "version": "0.0.2",
    "description": "asddf",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-operations_manager": "",
      "@itential/app-workflow_engine": ""
    }
  },
  "manifest": {
    "bundleName": "@local/sample-prebuilt",
    "fingerprint": "65b016913ed58fb92233500e",
    "createdEpoch": "1706038929905",
    "artifacts": [
      {
        "id": "sample",
        "name": "sample",
        "type": "automation",
        "location": "/bundles/automations/sample.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Convert Time to Simple String",
        "name": "Convert Time to Simple String",
        "type": "workflow",
        "location": "/bundles/workflows/Convert Time to Simple String.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "automation",
      "data": {
        "_id": "64d3ae5480ffefaf84a84f20",
        "name": "sample",
        "description": "",
        "componentName": "Convert Time to Simple String",
        "componentType": "workflows",
        "gbac": {
          "write": [],
          "read": []
        },
        "created": "2023-08-09T15:18:44.866Z",
        "createdBy": "6488f6fc88393312a6b97705",
        "lastUpdated": "2023-08-09T15:18:58.191Z",
        "lastUpdatedBy": "6488f6fc88393312a6b97705",
        "triggers": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Convert Time to Simple String",
        "tasks": {
          "1660": {
            "name": "getTime",
            "canvasName": "getTime",
            "summary": "Get time",
            "description": "Gets the current time with an optional offset, timezone shift, and format string",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Time",
            "variables": {
              "incoming": {
                "timezone": "",
                "offsetDuration": "",
                "format": ""
              },
              "outgoing": {
                "time": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -408,
              "y": -504
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -84,
              "y": -600
            },
            "x": 0,
            "y": 0.5
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": -84,
              "y": -132
            },
            "x": 1,
            "y": 0.5
          },
          "0acc": {
            "name": "convertTimeFormat",
            "canvasName": "convertTimeFormat",
            "summary": "Convert time format",
            "description": "Converts an input time to a new format. Can be used to extract more complex sets of information than extractField",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Time",
            "variables": {
              "incoming": {
                "inputTime": "$var.1660.time",
                "newFormatString": "HH:mm:ss.sss"
              },
              "outgoing": {
                "convertedTime": ""
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -84,
              "y": -348
            }
          },
          "4c83": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Data Using 'json-query' Format",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": true,
                "query": "time",
                "obj": "$var.0acc.convertedTime"
              },
              "outgoing": {
                "return_data": "$var.job.timeString"
              }
            },
            "actor": "Pronghorn",
            "groups": [],
            "nodeLocation": {
              "x": -348,
              "y": -240
            }
          }
        },
        "transitions": {
          "1660": {
            "0acc": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_start": {
            "1660": {
              "state": "success",
              "type": "standard"
            }
          },
          "workflow_end": {},
          "0acc": {
            "4c83": {
              "state": "success",
              "type": "standard"
            }
          },
          "4c83": {
            "workflow_end": {
              "state": "success",
              "type": "standard"
            }
          }
        },
        "inputSchema": {
          "type": "object",
          "properties": {}
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "timeString": {
              "title": "return_data",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "canvasVersion": 3,
        "type": "automation",
        "font_size": 12,
        "errorHandler": null,
        "preAutomationTime": 0,
        "sla": 0,
        "outputData": {},
        "lastUpdatedVersion": "5.46.0-2023.1.15.0",
        "createdVersion": "5.46.0-2023.1.13.0",
        "last_updated": "2023-09-27T11:58:38.414Z",
        "created": "2023-06-29T21:23:21.579Z",
        "tags": [],
        "groups": [],
        "migrationVersion": 2
      }
    }
  ],
  "readme": "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\r\n<!-- Update the below line with your Pre-Built name -->\r\n# Pre-Built Name\r\n<!-- Leave TOC intact unless you've added or removed headers -->\r\n## Table of Contents\r\n- [Pre-Built Name](#pre-built-name)\r\n  - [Table of Contents](#table-of-contents)\r\n  - [Overview](#overview)\r\n    - [Capabilities](#capabilities)\r\n  - [Getting Started](#getting-started)\r\n    - [Prerequisites](#prerequisites)\r\n    - [How to Install](#how-to-install)\r\n    - [Testing](#testing)\r\n      - [IAP Version](#iap-version)\r\n      - [Adapter Version](#adapter-version)\r\n      - [External System](#external-system)\r\n  - [Using this Pre-Built](#using-this-pre-built)\r\n    - [Entry Point](#entry-point)\r\n    - [Input Schema](#input-schema)\r\n    - [Output Schema](#output-schema)\r\n  - [Additional Information](#additional-information)\r\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\r\n## Overview\r\nThe **Pre-Built Name** Pre-Built is used for a repeatable task to automate your network operations.\r\n<!-- List capabilities of the Pre-Built -->\r\n### Capabilities\r\n- Does operation in external system\r\n- Provides option to run with no manual tasks shown in job with auto approve\r\n## Getting Started\r\nThese instructions will help you get a copy of the Pre-Built in your IAP instance for testing in your environment. Reading this section is also helpful for deployments as it provides you with pertinent information on prerequisites and capabilities.\r\n<!-- List any IAP version, adapters, or other dependencies needed to run this Pre-Built -->\r\n### Prerequisites\r\nUsers must satisfy the following prerequisites to install and run this Pre-Built:\r\n- Itential Automation Platform\r\n  - `2023.1.x`\r\n- An instantiated adapter\r\n<!-- Link to documentation for Pre-Built installation related major verison of IAP -->\r\n### How to Install\r\nTo install this Pre-Built:\r\n- Verify that you are running the documented [prerequisites](#prerequisites) in order to install the Pre-Built.\r\n- Follow the instructions on the Itential Documentation site for [importing a Pre-Built](https://docs.itential.com/docs/importing-a-prebuilt-2).\r\n### Testing\r\nWhile Itential tests this Pre-Built and its capabilities, it is often the case the customer environments offer their own unique circumstances. Therefore, it is our recommendation that you deploy this Pre-Built into a development/testing environment in which you can test the Pre-Built.\r\n#### IAP Version\r\nSpecifically what version of IAP was used to test Pre-Built\r\n#### Adapter Version\r\nWhat version of adapter was used to test Pre-Built. If no adapter needed for Pre-Built, do not include this section.\r\n#### External System\r\nWhat version of external system was used to test Pre-Built. If no external system needed for Pre-Built, do not include this section.\r\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc. -->\r\n## Using this Pre-Built\r\nThis Pre-Built can be run in a [childJob task](https://docs.itential.com/docs/childjob-1).\r\n### Entry Point\r\nState the IAP component name used to start the Pre-Built. Could be a workflow or JST or some other IAP component.\r\n**Note**: The entry point workflow to this Pre-Built is called `Pre-Built Workflow`. Use this workflow name if running this Pre-Built in a childJob task.\r\nThe input to and possible outputs from this Pre-Built are described here.\r\n<!-- Provide example input to Pre-Built as well as show table of what each property is regarding data type, if required, and a description -->\r\n### Input Schema\r\nExample input:\r\n```json\r\n{}\r\n```\r\nThe following table details the property keys of the  input object.\r\n| key                                      | type    | required | description                                             |\r\n|------------------------------------------|---------|----------|---------------------------------------------------------|\r\n<!-- Provide example input to Pre-Built as well as show table of what each property is regarding data type, if required, and a description -->\r\n### Output Schema\r\nThe `preBuiltResponse` job variable returned from the run Pre-Built workflow `Pre-Built Workflow` provides the reponse of the Pre-Built.\r\nSee an example output below.\r\n```json\r\n{}\r\n```\r\nThe `preBuiltError` job variable returned from the Pre-Built workflow `Pre-Built Workflow` provides the error response.\r\nSee an example output for this job variable when an error occurs.\r\n```json\r\n{}\r\n```\r\n## Additional Information\r\nPlease use your Itential Customer Success account if you need support when using this Pre-Built.\n"
}